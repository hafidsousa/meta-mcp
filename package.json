{
  "name": "meta-mcp",
  "version": "1.2.0",
  "description": "MCP Server for Facebook Marketing API integration",
  "main": "dist/server.js",
  "types": "dist/index.d.ts",
  "bin": {
    "meta-mcp": "dist/server.js"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "test": "jest",
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "ts-node src/server.ts",
    "prepare": "npm run build && chmod +x dist/server.js",
    "prepublishOnly": "npm run build",
    "lint": "eslint . --ext .ts",
    "format": "prettier --write \"**/*.ts\"",
    "type-check": "tsc --noEmit",
    "list-accounts": "ts-node src/list-accounts.ts",
    "list-campaigns": "ts-node src/list-campaigns.ts",
    "generate-token-url": "ts-node src/generate-token-url.ts"
  },
  "keywords": [
    "facebook",
    "marketing",
    "ads",
    "mcp",
    "cursor"
  ],
  "author": "Hafid Sousa",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.9.0",
    "dotenv": "^16.0.3"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.1.0",
    "@semantic-release/npm": "^9.0.2",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.0.0",
    "semantic-release": "^19.0.5",
    "ts-node": "^10.9.0",
    "typescript": "^5.0.0"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/hafidsousa/meta-mcp"
  },
  "bugs": {
    "url": "https://github.com/hafidsousa/meta-mcp/issues"
  },
  "mcp": {
    "type": "server",
    "transport": "stdio",
    "env": {
      "FB_ACCESS_TOKEN": {
        "type": "string",
        "description": "Facebook Marketing API access token",
        "required": true
      },
      "FB_AD_ACCOUNT_ID": {
        "type": "string",
        "description": "Facebook Ad Account ID",
        "required": true
      },
      "FB_APP_ID": {
        "type": "string",
        "description": "Facebook App ID (optional when using MCP tools)",
        "required": false
      },
      "FB_APP_SECRET": {
        "type": "string",
        "description": "Facebook App Secret (optional when using MCP tools)",
        "required": false
      }
    },
    "exports": {
      "createCampaign": {
        "description": "Create a new Facebook ad campaign",
        "parameters": {
          "config": {
            "type": "object",
            "description": "Campaign configuration",
            "required": true
          }
        }
      },
      "createAdSet": {
        "description": "Create a new ad set within a campaign",
        "parameters": {
          "config": {
            "type": "object",
            "description": "Ad set configuration",
            "required": true
          }
        }
      },
      "createAd": {
        "description": "Create a new ad within an ad set",
        "parameters": {
          "config": {
            "type": "object",
            "description": "Ad configuration",
            "required": true
          }
        }
      },
      "getAdSets": {
        "description": "Get all ad sets for a campaign",
        "parameters": {
          "campaignId": {
            "type": "string",
            "description": "ID of the campaign"
          }
        }
      },
      "getAds": {
        "description": "Get all ads for an ad set",
        "parameters": {
          "adSetId": {
            "type": "string",
            "description": "ID of the ad set"
          }
        }
      },
      "pauseCampaign": {
        "description": "Pause an active campaign",
        "parameters": {
          "campaignId": {
            "type": "string",
            "description": "ID of the campaign to pause"
          }
        }
      },
      "pauseAdSet": {
        "description": "Pause an active ad set",
        "parameters": {
          "adSetId": {
            "type": "string",
            "description": "ID of the ad set to pause"
          }
        }
      },
      "pauseAd": {
        "description": "Pause an active ad",
        "parameters": {
          "adId": {
            "type": "string",
            "description": "ID of the ad to pause"
          }
        }
      },
      "getAvailableAdAccounts": {
        "description": "Get all available ad accounts for the current user",
        "parameters": {}
      },
      "getCampaigns": {
        "description": "Get all campaigns for the configured ad account"
      }
    }
  }
}
